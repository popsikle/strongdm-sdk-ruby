# Copyright 2020 StrongDM Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: access_rules.proto for package 'v1'

require "grpc"
require "access_rules_pb"

module V1
  module AccessRules
    # AccessRules allows the use of tags and other attributes to grant resources
    # to roles. Each Role may have several access rules.
    class Service
      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = "v1.AccessRules"

      # Plan registers a new AccessRule.
      rpc :Plan, AccessRulePlanRequest, AccessRulePlanResponse
      # Create registers a new AccessRule.
      rpc :Create, AccessRuleCreateRequest, AccessRuleCreateResponse
      # Get reads one AccessRule by ID.
      rpc :Get, AccessRuleGetRequest, AccessRuleGetResponse
      # Update patches a AccessRule by ID.
      rpc :Update, AccessRuleUpdateRequest, AccessRuleUpdateResponse
      # Delete removes a AccessRule by ID.
      rpc :Delete, AccessRuleDeleteRequest, AccessRuleDeleteResponse
      # List gets a list of Access Rules matching a given set of criteria.
      rpc :List, AccessRuleListRequest, AccessRuleListResponse
    end

    Stub = Service.rpc_stub_class
  end
end
