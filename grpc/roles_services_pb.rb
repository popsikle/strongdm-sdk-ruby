# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: roles.proto for package 'v1'

require 'grpc'
require 'roles_pb'

module V1
  module Roles
    # Roles are tools for controlling user access to resources. Each role holds a
    # list of resources which they grant access to. Composite roles are a special
    # type of role which have no resource associations of their own, but instead
    # grant access to the combined resources associated with a set of child roles.
    # Each user can be a member of one role or composite role.
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'v1.Roles'

      # Create registers a new role.
      rpc :Create, RoleCreateRequest, RoleCreateResponse
      # Get reads one role by ID.
      rpc :Get, RoleGetRequest, RoleGetResponse
      # Update patches a Role by ID.
      rpc :Update, RoleUpdateRequest, RoleUpdateResponse
      # Delete removes a Role by ID.
      rpc :Delete, RoleDeleteRequest, RoleDeleteResponse
      # List gets a list of Roles matching a given set of criteria.
      rpc :List, RoleListRequest, RoleListResponse
    end

    Stub = Service.rpc_stub_class
  end
end
